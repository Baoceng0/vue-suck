{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/globalAPI.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// static method\r\nconst strats = {};\r\nconst LIFECYCLE = [\r\n    'beforeCreate',\r\n    'created'\r\n]\r\nLIFECYCLE.forEach(hook => {\r\n    strats[hook] = function (p, c) {\r\n        if (c) {\r\n            if (p) {\r\n                return p.concat(c);\r\n            } else {\r\n                return [c]\r\n            }\r\n        } else {\r\n            return p;\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport function mergeOptions(parent, child) {\r\n    // console.log(\"cc\", parent, child)\r\n    const options = {};\r\n\r\n    for (let key in parent) {\r\n        mergeField(key);\r\n    }\r\n\r\n    for (let key in child) {\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key);\r\n        }\r\n    }\r\n\r\n    function mergeField(key) {\r\n        // console.log(key);\r\n\r\n        // 策略模式\r\n        if (strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key])\r\n        } else {\r\n            options[key] = child[key] || parent[key];\r\n        }\r\n    }\r\n\r\n    return options;\r\n}","import { mergeOptions } from \"./utils\";\r\n\r\nexport function initGlobalAPI(Vue) {\r\n    Vue.options = {};\r\n    // mergeField(\"haha\")\r\n    Vue.mixin = function (mixin) {\r\n        this.options = mergeOptions(this.options, mixin);\r\n        return this;\r\n    }\r\n\r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\r\n\r\n\r\n// vue3 采用的不是使用正则\r\n// 对模板进行编译处理  \r\n\r\n\r\nexport function parseHTML(html) { // html最开始肯定是一个  </div>\r\n\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = []; // 用于存放元素的\r\n    let currentParent; // 指向的是栈中的最后一个\r\n    let root;\r\n\r\n    // 最终需要转化成一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n    // 利用栈型结构 来构造一颗树\r\n    function start(tag, attrs) {\r\n        let node =  createASTElement(tag,attrs); // 创造一个ast节点\r\n        if(!root){ // 看一下是否是空树\r\n            root = node; // 如果为空则当前是树的根节点\r\n        } \r\n        if(currentParent){\r\n            node.parent = currentParent; // 只赋予了parent属性\r\n            currentParent.children.push(node); // 还需要让父亲记住自己\r\n        }\r\n        stack.push(node);\r\n        currentParent = node; // currentParent为栈中的最后一个\r\n    }\r\n    function chars(text) { // 文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g,' '); // 如果空格超过2就删除2个以上的\r\n        text && currentParent.children.push({\r\n            type:TEXT_TYPE,\r\n            text,\r\n            parent:currentParent\r\n        });\r\n    }\r\n    function end(tag) {\r\n       let node =  stack.pop();  // 弹出最后一个, 校验标签是否合法\r\n       currentParent = stack[stack.length - 1];\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n            // 如果不是开始标签的结束 就一直匹配下去\r\n            let attr, end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match;\r\n        }\r\n        return false; // 不是开始标签\r\n    }\r\n    while (html) {\r\n        // 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n        // 如果textEnd > 0说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<');  // 如果indexOf中的索引是0 则说明是个标签\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n            if (startTagMatch) { // 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd); // 文本内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length); // 解析到的文本 \r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    let str = ''// {name,value}\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name === 'style') {\r\n            // color:red;background:red => {color:'red'}\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => { // qs 库\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},` // a:b,c:d,\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        // 文本\r\n        let text = node.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            //_v( _s(name)+'hello' + _s(name))\r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            // split\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index; // 匹配的位置  {{name}} hello  {{name}} hello \r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${ast.children.length ? `,${children}` : ''\r\n        })`)\r\n\r\n    return code;\r\n}\r\nexport function compileToFunction(template) {\r\n\r\n    // 1.就是将template 转化成ast语法树\r\n    let ast = parseHTML(template);\r\n\r\n    // 2.生成render方法 (render方法执行后的返回的结果就是 虚拟DOM)\r\n\r\n    // 模板引擎的实现原理 就是 with  + new Function\r\n\r\n    let code = codegen(ast);\r\n    code = `with(this){return ${code}}`;\r\n    let render = new Function(code); // 根据代码生成render函数\r\n\r\n    //  _c('div',{id:'app'},_c('div',{style:{color:'red'}},  _v(_s(vm.name)+'hello'),_c('span',undefined,  _v(_s(age))))\r\n\r\n    return render;\r\n}\r\n\r\n\r\n// <xxx\r\n// <namepsace:xxx\r\n// color   =   \"asdsada\"     c= 'asdasd'  d=  asdasdsa","\r\n// h()  _c()\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if (data == null) {\r\n        data = {}\r\n    }\r\n    let key = data.key;\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vnode(vm, tag, key, data, children);\r\n}\r\n// _v();\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n// ast一样吗？ ast做的是语法层面的转化 他描述的是语法本身 (可以描述js css html)\r\n// 我们的虚拟dom 是描述的dom元素，可以增加一些自定义属性  (描述dom的)\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n        // ....\r\n    }\r\n}","let id = 0;\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++;\r\n        this.subs = [];\r\n    }\r\n    depend() {\r\n        // this.subs.push(Dep.target);\r\n\r\n        Dep.target.addDep(this);\r\n    }\r\n    addSub(watcher) {\r\n        this.subs.push(watcher);\r\n    }\r\n\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update());\r\n    }\r\n}\r\nDep.target = null;\r\n\r\n\r\nlet stack = [];\r\nexport function pushTarget(watcher) {\r\n    stack.push(watcher);\r\n    Dep.target = watcher;\r\n}\r\n\r\nexport function popTarget(watcher) {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nexport default Dep;","import Dep from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\n\r\nclass Watcher {\r\n    constructor(vm, fn, options) {\r\n        this.id = id++;\r\n        this.renderWatcher = options;\r\n        this.getter = fn;\r\n        this.deps = [];\r\n        this.depsId = new Set();\r\n        this.get();\r\n    }\r\n\r\n    get() {\r\n        Dep.target = this;\r\n        this.getter()\r\n        Dep.target = null;\r\n    }\r\n\r\n    addDep(dep) {\r\n        let id = dep.id;\r\n        if (!this.depsId.has(dep.id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        // console.log(\"update\");\r\n        // this.get();  // 立即更新性能不好，异步一下\r\n        queueWatcher(this); // cacher the watcher\r\n    }\r\n\r\n    run() {\r\n        console.log(\"run\");\r\n        this.get();\r\n    }\r\n\r\n}\r\n\r\n\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false;\r\n\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0);\r\n    flushQueue.forEach(q => q.run());\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if (!has[id]) {\r\n        queue.push(watcher)\r\n        has[id] = true;\r\n        console.log(\"queue\");\r\n\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\n// function timerFun(){\r\n\r\n// }\r\nlet timerFun;\r\nif (Promise) {\r\n    timerFun = () => {\r\n        Promise.resolve().then(flushCabllbacks);\r\n    }\r\n} else if (MutationObserver) {\r\n    let observe = new MutationObserver(flushCabllbacks);\r\n    let textNode = document.createTextNode(1);\r\n    observe.observe(textNode, {\r\n        characterData: true\r\n    });\r\n    timerFun = () => {\r\n        textNode.textContent = 2;\r\n    }\r\n} else if(setImmediate) {\r\n    timerFun = () => {\r\n        setImmediate(flushCabllbacks);\r\n    }\r\n} else {\r\n    timerFun = () => {\r\n        setTimeout(flushCabllbacks);\r\n    }\r\n}\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\n\r\nfunction flushCabllbacks() {\r\n    waiting = false;\r\n    let obs = callbacks.slice(0);\r\n    callbacks = [];\r\n    obs.forEach(cb => cb());\r\n}\r\nexport function nextTick(cb) {\r\n    // console.log(cb);\r\n    callbacks.push(cb)\r\n    if (!waiting) {\r\n        timerFun();\r\n        waiting = true;\r\n    }\r\n}\r\n\r\n// 每个属性都需要dep\r\n\r\n\r\nexport default Watcher;","import { createElementVNode, createTextVNode } from \"./vdom\"\r\nimport Watcher from \"./observe/watcher\";\r\n\r\n\r\nfunction createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    if (typeof tag === 'string') { // 标签\r\n        vnode.el = document.createElement(tag); // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\r\n        patchProps(vnode.el, data);\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child))\r\n        });\r\n    } else {\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\nfunction patchProps(el, props) {\r\n    for (let key in props) {\r\n        if (key === 'style') { // style{color:'red'}\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);\r\n        }\r\n    }\r\n}\r\nfunction patch(oldVNode, vnode) {\r\n    // 写的是初渲染流程 \r\n    const isRealElement = oldVNode.nodeType;\r\n    if (isRealElement) {\r\n        const elm = oldVNode; // 获取真实元素\r\n        const parentElm = elm.parentNode; // 拿到父元素\r\n        let newElm = createElm(vnode);\r\n        parentElm.insertBefore(newElm, elm.nextSibling);\r\n        parentElm.removeChild(elm); // 删除老节点\r\n\r\n        return newElm\r\n    } else {\r\n        // diff算法\r\n    }\r\n}\r\n\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function (vnode) { // 将vnode转化成真实dom\r\n        const vm = this;\r\n        const el = vm.$el;\r\n\r\n        // patch既有初始化的功能  又有更新 \r\n        vm.$el = patch(el, vnode);\r\n    }\r\n\r\n    // _c('div',{},...children)\r\n    Vue.prototype._c = function () {\r\n        return createElementVNode(this, ...arguments)\r\n    }\r\n    // _v(text)\r\n    Vue.prototype._v = function () {\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._s = function (value) {\r\n        if (typeof value !== 'object') return value\r\n        return JSON.stringify(value)\r\n    }\r\n    Vue.prototype._render = function () {\r\n        // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\r\n\r\n        return this.$options.render.call(this); // 通过ast语法转义后生成的render方法\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) { // 这里的el 是通过querySelector处理过的\r\n    vm.$el = el;\r\n    // 1.调用render方法产生虚拟节点 虚拟DOM\r\n\r\n    const updateComponent = () => {\r\n        vm._update(vm._render()); // vm.$options.render() 虚拟节点\r\n    }\r\n\r\n\r\n    let watcher = new Watcher(vm, updateComponent, true);\r\n    console.log(watcher);\r\n    // 2.根据虚拟DOM产生真实DOM \r\n\r\n    // 3.插入到el元素中\r\n\r\n}\r\n// vue核心流程 1） 创造了响应式数据  2） 模板转换成ast语法树  \r\n// 3) 将ast语法树转换了render函数 4) 后续每次数据更新可以只执行render函数 (无需再次执行ast转化的过程)\r\n// render函数会去产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点创造真实的DOM\r\n\r\n\r\n\r\n\r\nexport function callHook(vm, hook) {\r\n    const handlers = vm.$options[hook];\r\n    if (handlers) {\r\n        handlers.forEach(handler => handler.call(vm));\r\n    }\r\n}\r\n\r\n","// 我们希望重写数组中的部分方法\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n// newArrayProto.__proto__  = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [ // 找到所有的变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n] // concat slice 都不会改变原数组\r\nmethods.forEach(method => {\r\n    // arr.push(1,2,3)\r\n    newArrayProto[method] = function (...args) { // 这里重写了数组的方法\r\n        // push.call(arr)\r\n        // todo...\r\n        const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法 ， 函数的劫持  切片编程\r\n        // 我们需要对新增的 数据再次进行劫持\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift': // arr.unshift(1,2,3)\r\n                inserted = args;\r\n                break;\r\n            case 'splice':  // arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2);\r\n            default:\r\n                break;\r\n        }\r\n        // console.log(inserted); // 新增的内容\r\n        if(inserted) {\r\n            // 对新增的内容再次进行观测  \r\n            ob.observeArray(inserted);\r\n        }\r\n        return result\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // Object.defineProperty只能劫持已经存在的属性 （vue里面会为此单独写一些api  $set $delete）\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false // 将__ob__ 变成不可枚举 （循环的时候无法获取到）\r\n        });\r\n        // data.__ob__ = this; // 给数据加了一个标识 如果数据上有__ob__ 则说明这个属性被观测过了\r\n        if (Array.isArray(data)) {\r\n            // 这里我们可以重写数组中的方法 7个变异方法 是可以修改数组本身的\r\n            data.__proto__ = newArrayProto  // 需要保留数组原有的特性，并且可以重写部分方法\r\n            this.observeArray(data); // 如果数组中放的是对象 可以监控到对象的变化\r\n        } else {\r\n            this.walk(data);\r\n        }\r\n    }\r\n    walk(data) { // 循环对象 对属性依次劫持\r\n        // \"重新定义\"属性   性能差\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    observeArray(data) { // 观测数组\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\nexport function defineReactive(target, key, value) { // 闭包  属性劫持\r\n    observe(value); // 对所有的对象都进行属性劫持\r\n    let dep = new Dep();\r\n    Object.defineProperty(target, key, {\r\n        get() { // 取值的时候 会执行get\r\n            if (Dep.target) {\r\n                dep.depend();\r\n            }\r\n            console.log('key', key)\r\n            return value\r\n        },\r\n        set(newValue) { // 修改的时候 会执行set\r\n            if (newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n            dep.notify();\r\n        }\r\n    })\r\n}\r\nexport function observe(data) {\r\n    // 对这个对象进行劫持\r\n    if (typeof data !== 'object' || data == null) {\r\n        return; // 只对对象进行劫持\r\n    }\r\n    if (data.__ob__ instanceof Observer) { // 说明这个对象被代理过了\r\n        return data.__ob__;\r\n    }\r\n    // 如果一个对象被劫持过了，那就不需要再被劫持了 (要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过)\r\n\r\n    return new Observer(data);\r\n\r\n}\r\n","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取所有的选项\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n}\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, { // vm.name\r\n        get() {\r\n            return vm[target][key]; // vm._data.name\r\n        },\r\n        set(newValue){\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; // data可能是函数和对象\r\n    data = typeof data === 'function' ? data.call(vm) : data; // data是用户返回的对象\r\n\r\n    vm._data = data; // 我将返回的对象放到了_data上\r\n    // 对数据进行劫持 vue2 里采用了一个api defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data 用vm来代理就可以了 \r\n    for (let key in data) {\r\n        proxy(vm, '_data', key);\r\n    }\r\n}","import { compileToFunction } from \"./compiler\";\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\nimport { mergeOptions } from \"./utils\";\r\n\r\nexport function initMixin(Vue) { // 就是给Vue增加init方法的\r\n    Vue.prototype._init = function (options) { // 用于初始化操作\r\n        // vue  vm.$options 就是获取用户的配置 \r\n        // 我们使用的 vue的时候 $nextTick $data $attr.....\r\n        const vm = this;\r\n        vm.$options = mergeOptions(this.constructor.options, options); // 将用户的选项挂载到实例上\r\n\r\n        // console.log(vm.$options);\r\n        callHook(vm,'beforeCreate');\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        callHook(vm,'created');\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el); // 实现数据的挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options\r\n        if (!ops.render) { // 先进行查找有没有render函数 \r\n            let template; // 没有render看一下是否写了tempate, 没写template采用外部的template\r\n            if (!ops.template && el) { // 没有写模板 但是写了el\r\n                template = el.outerHTML\r\n            }else{\r\n                if(el){\r\n                    template = ops.template // 如果有el 则采用模板的内容\r\n                }\r\n            }\r\n            // 写了temlate 就用 写了的template\r\n            if(template && el){\r\n                // 这里需要对模板进行编译 \r\n                const render = compileToFunction(template);\r\n                ops.render = render; // jsx 最终会被编译成h('xxx')\r\n            }\r\n        }\r\n        mountComponent(vm,el); // 组件的挂载  \r\n         // 最终就可以获取render方法\r\n        // script 标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n        // runtime是不包含模板编译的, 整个编译是打包的时候通过loader来转义.vue文件的, 用runtime的时候不能使用template\r\n\r\n    }\r\n}\r\n\r\n","import { initGlobalAPI } from \"./globalAPI\";\r\nimport { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { nextTick } from \"./observe/watcher\";\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) { // options就是用户的选项\r\n    this._init(options); // 默认就调用了init\r\n}\r\n\r\nVue.prototype.$nextTick = nextTick\r\ninitMixin(Vue); // 扩展了init方法\r\ninitLifeCycle(Vue);\r\n\r\ninitGlobalAPI(Vue);\r\n\r\nexport default Vue"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","item","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","createElementVNode","vm","data","vnode","createTextVNode","undefined","id","Dep","subs","target","addDep","watcher","update","Watcher","fn","renderWatcher","getter","deps","depsId","Set","get","dep","has","add","addSub","queueWatcher","console","log","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","timerFun","Promise","resolve","then","flushCabllbacks","MutationObserver","observe","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","callbacks","waiting","obs","cb","createElm","el","createElement","patchProps","appendChild","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","call","mountComponent","updateComponent","callHook","handlers","handler","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","result","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","depend","set","newValue","notify","initState","opts","initData","proxy","_data","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","$nextTick"],"mappings":"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"}